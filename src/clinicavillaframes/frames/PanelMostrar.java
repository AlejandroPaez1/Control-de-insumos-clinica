
package clinicavillaframes.frames;

//import java.awt.List;
//import java.lang.System.Logger;
//import java.lang.System.Logger.Level;
//import java.sql.DriverManager;
//import java.sql.ResultSet;
//import java.sql.Statement;
//import javax.swing.table.DefaultTableModel;
//import java.sql.*;
//import java.util.ArrayList;
//import javax.swing.JOptionPane;
//import java.util.List;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class PanelMostrar extends javax.swing.JPanel {
     
        static String cadenaConexion = "jdbc:postgresql://127.0.0.1/clinica";
        static Connection conexion = null;
        static Statement sentencia = null;
        static ResultSet result = null;
        static String cadenaDriver = "org.postgresql.Driver";
      //  static String consultaSQL = "SELECT Cod_medi, Nombre_Medi,Tipo,mes_cad,year_cad, Cod_lote, num_Piezas from almacen where verificador=1; ";
static String consultaSQL = "select * from almacen_int ;";      
// static ResultSet result = null;
        static Datos obDatos;
    Connection Connection;
    Statement st;


             
        DefaultTableModel modelo;
        DefaultTableModel modelop;

    public PanelMostrar() {
       
        
        
        initComponents();
        mostrarmedi();
//        conexionPostgres conzion = new conexionPostgres();
//        conzion.conexion();
      //  conectarbdmedi();
            }
    


    
    public void mostrarmedi(){
        
        modelo = new DefaultTableModel();
        modelo.addColumn("Código");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Tipo");
        modelo.addColumn("Mes de cad");
        modelo.addColumn("año de cad");
        modelo.addColumn("Num de Lote");
        modelo.addColumn("num piezas");
         this.tablamostrar.setModel(modelo);
    
         //String 
         
         
    }
       static public void conectarbdmedi() {
        try {
            Class.forName(cadenaDriver);
            conexion = DriverManager.getConnection(cadenaConexion, "postgres", "1234");
            sentencia = conexion.createStatement();

            result = sentencia.executeQuery(consultaSQL);
            System.out.println("conexion de conectarbd medi");
        } catch (Exception e) {
                        System.out.println("error de coneexiion" +e.getMessage());

            e.printStackTrace();
        }
    }      
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablamostrar = new javax.swing.JTable();
        btn_mostrarrr = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 879, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );

        add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("LOTES DE MEDICAMENTOS GUARDADOS");

        jScrollPane2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        tablamostrar.setAutoCreateRowSorter(true);
        tablamostrar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tablamostrar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablamostrar);

        btn_mostrarrr.setText("mostrar");
        btn_mostrarrr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mostrarrrActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                .addGap(159, 159, 159))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(btn_mostrarrr, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(132, 132, 132))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                .addGap(32, 32, 32)
                .addComponent(btn_mostrarrr)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );

        add(jPanel2, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    
    
    
     public Connection conexion() {
        try {
            if (Connection == null) {
                Class.forName("org.postgresql.Driver");
                Connection = DriverManager.getConnection("jdbc:postgresql://localhost:5432/clinica",
                    "postgres", "1234");
                System.out.println("de if conecttion conexion");
            } 
            System.out.println("de conecction conexion");
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        
        return Connection;
    }
    private void btn_mostrarrrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mostrarrrActionPerformed
        
          presentar();
        
        
//
 //conexionPostgres enlace = new conexionPostgres();
//  Connection conect = enlace.conexion();
//
//
//Object[][] profesores = new conexion.conexionPostgres().consultar();
//        for (int i = 0; i < profesores.length; i++){
//        dft.addRow(profesores[i]);
//        
//        }


//     // Object [][] profesores = new conexion.Conexion().consultar();
//        Object [][] consultar new conexionPostgres.consultar();
//        
//     Object[]][] consultar = new conexion.conexionPostgres().consultar()
//        
//        for (int i = 0; i < consultar.length; i++) {
//            dft.addRow(consultar[i]);
//        }
//        
                
        



//metodo para limpiar

     int cantfila = tablamostrar.getRowCount();
     for (int i = cantfila - 1; i >= 0; i--) {
         modelo.removeRow(i);
     }
           // conexion();

     //conectarbdmedi();
          //  conexionPostgres elchido = new conexionPostgres();
        //   elchido.conexion();
           
           
     try {

          //  java.util.List<Datos> lista = new ArrayList<>();
            List<Datos> lista = new ArrayList<>();
//)         List<Datos> lista = new ArrayList<>();
         Datos  obDatos;
         
         while (result.next()){
             obDatos = new Datos();
             obDatos.setcod_medi(result.getString("cod_medi"));
             obDatos.setnombre_medi( result.getString("nombre_medi"));
             obDatos.settipo(result.getString("tipo"));
             obDatos.setmes_cad(result.getString("mes_cad"));
             obDatos.setyear_cad(result.getInt("year_cad"));
             obDatos.setcod_lote(result.getString("cod_lote"));
             obDatos.setnum_piezas(result.getInt("num_piezas"));
             
             lista.add(obDatos);
            }
         String[] datosdos;
         
         for (Datos elem : lista){
             datosdos = new String[7];
             datosdos[0] = elem.cod_medi;
             datosdos[1] = elem.nombre_medi;
             datosdos[2] = elem.tipo;
             datosdos[3] =  elem.mes_cad; //elem.mes_cad;
             datosdos[4] = Integer.toString(elem.year_cad);
             datosdos[5] = elem.cod_lote;
             datosdos[6] = Integer.toString(elem.num_piezas);
                
                modelo.addRow(datosdos);
                }
            tablamostrar.setModel(modelo);
            
            
        } catch (SQLException e) {
         // Logger.getLogger(PanelMostrar.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null,"error al mostrar la tabla: "+e);
            System.out.println("error al mostrar" + e.getMessage());
        }
      
        
    }//GEN-LAST:event_btn_mostrarrrActionPerformed

    void presentar(){
        DefaultTableModel modelop = new DefaultTableModel();
        modelop.addColumn("Código");
        modelop.addColumn("Descripcion");
        modelop.addColumn("Tipo");
        modelop.addColumn("Mes de cad");
        modelop.addColumn("año de cad");
        modelop.addColumn("Num de Lote");
        modelop.addColumn("num piezas");    
        tablamostrar.setModel(modelop);
        String datos[] = new String[7];
//        Connection base = null;
Statement at = null;
//        String url = "jdbc:postgresql://127.0.0.1/clinica";

    
        
        try {
            ResultSet rs = at.executeQuery("SELECT * FROM V_mostrar_almacen");
        
            while(rs.next()){
                datos[0] = rs.getString("cod_medi");
                datos[1] =rs.getString("nombre_medi");
                datos[2] = rs.getString("tipo");
                datos[3] = rs.getString("mes_cad");
                datos[4] = rs.getString("year_cad");
                datos[5] = rs.getString("cod_lote");
                datos[6] = rs.getString("num_piezas");
                modelop.addRow(datos);
            

            }
            
            JOptionPane.showMessageDialog(null, "okkokoo");
            rs.close();
            at.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        
        
    
    }
    
    
    
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_mostrarrr;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablamostrar;
    // End of variables declaration//GEN-END:variables
}
